---
- name: Configure Servers
  hosts: external_vms
  gather_facts: true
  become: true

  vars:
    docker_version: "5:23.0.6-1~ubuntu.20.04~focal"

  tasks:

    - name: Turn off swap
      shell: swapoff -a

    - name: Create sysctl directory
      file:
        path: /etc/sysctl.d
        state: directory
        mode: '0755'

    - name: Create Kubernetes sysctl configuration file
      file:
        path: /etc/sysctl.d/kubernetes.conf
        state: touch
        mode: '0644'

    - name: Configure Kernel Parameters
      lineinfile:
        dest: /etc/sysctl.d/kubernetes.conf
        line: "{{ item }}"
      with_items:
        - "net.bridge.bridge-nf-call-ip6tables = 1"
        - "net.bridge.bridge-nf-call-iptables = 1"

    - name: Apply Kernel Parameters
      shell: sysctl --system


  # Install docker engine

    - name: Update package lists
      command: apt-get update

    - name: insatll docker prequisites packages (ca-certificates curl gnupg)
      command: sudo apt-get install ca-certificates curl gnupg

    - name: Create Docker keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Remove existing Docker GPG key file if it exists
      shell: rm -f /etc/apt/keyrings/docker.gpg
      ignore_errors: true

    - name: Add Docker APT repository
      shell: |
       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    - name: Set permissions on Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: set up the repository docker repositry
      shell: |
        echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu" $(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update package lists
      command: sudo apt-get update

    - name: Update docker package lists from the newly added repo (docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin)
      command: sudo apt-get install docker-ce={{ docker_version }} docker-ce-cli={{ docker_version }} containerd.io docker-buildx-plugin docker-compose-plugin -y

    - name: Add user to the docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true
        state: present

# ------------------------------------------------------------------------


    - name: install longhorn prerequisites packages (open-iscsi nfs-common jq)
      command: sudo apt-get install open-iscsi nfs-common jq -y

    - name: Check if multipath.conf exists
      stat:
        path: /etc/multipath.conf
      register: multipath_conf_stat

    - name: Create multipath.conf if not exists and copy blacklist to avoid multipath on local disks
      copy:
        content: |
          blacklist {
              devnode "^sd[a-z0-9]+"
          }
        dest: /etc/multipath.conf
      when: not multipath_conf_stat.stat.exists
    - name: Restart multipath service
      systemd:
        name: multipathd.service
        state: restarted

    - name: Verify configuration is applied
      command: multipath -t
